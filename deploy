#!/bin/bash -ex

go vet ./...
go install -v ./...

if [ "$IP" == "" ]; then
  if false; then
    doctl compute droplet create nof1 \
      --image ubuntu-18-04-x64 --region nyc3 --size s-1vcpu-1gb \
      --ssh-keys a6:52:93:88:c5:35:fa:72:02:f0:91:24:20:65:b9:c3
  fi

  IP=`doctl compute droplet list nof1 --format PublicIPv4 --no-header`
  if [ "$IP" == "" ]; then
    echo 1>&2 "Can't find IP address for nof1"
    exit 1
  fi
fi

# Only needs performed one time
if false; then
  ssh -i ~/.ssh/digitalocean root@$IP 'bash -exs' <<"EOF"
    apt-get update
    apt-get -y dist-upgrade

    # Install LetsEncrypt Certbot
    apt-get install software-properties-common
    add-apt-repository -y universe
    add-apt-repository -y ppa:certbot/certbot
    apt-get update
    apt-get install -y certbot
    certbot certonly --standalone --agree-tos --email dan@danstutzman.com --no-eff-email -d n-of-1.club

    useradd --create-home nof1-backend --shell /bin/bash || true

    mkdir -p /home/nof1-backend/.ssh
    chmod 0700 /home/nof1-backend/.ssh
    chown nof1-backend:nof1-backend /home/nof1-backend/.ssh

    cp /root/.ssh/authorized_keys /home/nof1-backend/.ssh
    chmod 0600 /home/nof1-backend/.ssh/authorized_keys
    chown nof1-backend:nof1-backend \
      /home/nof1-backend/.ssh/authorized_keys

    GOROOT=/home/nof1-backend/go1.14.linux-amd64
    if [ ! -e $GOROOT ]; then
      sudo -u nof1-backend curl \
        -o /home/nof1-backend/go1.14.linux-amd64.tar.gz \
        https://dl.google.com/go/go1.14.linux-amd64.tar.gz
      cd /home/nof1-backend
      sudo -u nof1-backend tar xzf \
        /home/nof1-backend/go1.14.linux-amd64.tar.gz
      sudo -u nof1-backend mv go $GOROOT
    fi

    GOPATH=/home/nof1-backend/gopath
    sudo -u nof1-backend mkdir -p $GOPATH
    sudo -u nof1-backend mkdir -p $GOPATH/src/bitbucket.org/danstutzman/nof1-backend

    # Install dependencies for go-sqlite3
    apt-get install -y build-essential sqlite3
EOF
fi

time rsync -a -e "ssh -C -i ~/.ssh/digitalocean" -r . nof1-backend@$IP:/home/nof1-backend/gopath/src/bitbucket.org/danstutzman/nof1-backend --include='*.go' --include='go.mod' --include='go.sum' --include='*.sh' --include='*.mp3' --include='*.html' --include='*.svg' --include='bundle.js' --include='bundle.js.map' --include='*/' --exclude='*' --prune-empty-dirs

ssh -i ~/.ssh/digitalocean root@$IP 'bash -exs' <<"EOF"
  GOPATH=/home/nof1-backend/gopath
  GOROOT=/home/nof1-backend/go1.14.linux-amd64
  GOCACHE=/home/nof1-backend/gocache
  cd $GOPATH/src/bitbucket.org/danstutzman/nof1-backend
  chown -R nof1-backend:nof1-backend .
  sudo -u nof1-backend mkdir -p $GOCACHE
  time sudo -u nof1-backend \
    GOROOT=$GOROOT GOPATH=$GOPATH GOCACHE=$GOCACHE \
    $GOROOT/bin/go install -v -race ./...

  if [ ! -e /home/nof1-backend/db.sqlite3 ]; then
    $GOPATH/src/bitbucket.org/danstutzman/nof1-backend/db/1_populate.sh
    mv $GOPATH/src/bitbucket.org/danstutzman/nof1-backend/db/db.sqlite3 \
      /home/nof1-backend/db.sqlite3
    chown nof1-backend:nof1-backend /home/nof1-backend/db.sqlite3
  fi

  ADMIN_PASSWORD=$(cat /home/nof1-backend/ADMIN_PASSWORD)

  tee /etc/systemd/system/nof1-backend.service <<EOF2
[Unit]
Description=nof1-backend service
After=network.target

[Service]
Type=simple
Restart=on-failure
RestartSec=1
WorkingDirectory=/home/nof1-backend
Environment=ADMIN_PASSWORD=$ADMIN_PASSWORD
Environment=HTTP_PORT=80
Environment=DB_FILE=/home/nof1-backend/db.sqlite3
Environment=HTTPS_CERT_FILE=/etc/letsencrypt/live/n-of-1.club/fullchain.pem
Environment=HTTPS_KEY_FILE=/etc/letsencrypt/live/n-of-1.club/privkey.pem
Environment=STATIC_DIR=/home/nof1-backend/gopath/src/bitbucket.org/danstutzman/nof1-backend/static
ExecStart=/home/nof1-backend/nof1-backend
StandardOutput=syslog
StandardError=syslog

[Install]
WantedBy=multi-user.target
EOF2
  sudo systemctl daemon-reload

  sudo service nof1-backend stop || true
  sudo -u nof1-backend cp -rv $GOPATH/bin/nof1-backend \
    /home/nof1-backend
  setcap CAP_NET_BIND_SERVICE=+eip /home/nof1-backend/nof1-backend
  sudo systemctl enable nof1-backend
  sudo systemctl start nof1-backend
  sleep 1

  curl --silent --show-error -o /dev/null https://n-of-1.club
EOF
